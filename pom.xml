<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.nlnwa</groupId>
    <artifactId>veidemann-rethinkdbadapter</artifactId>
    <version>0</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <docker.tag>latest</docker.tag>

        <docker.java.image>openjdk:8-jdk-alpine</docker.java.image>
        <initializer.image.name>veidemann-db-initializer</initializer.image.name>
        <log4j.version>2.7</log4j.version>

        <!--Docker container versions forintegration tests-->
        <rethinkdb.version>2.3.6</rethinkdb.version>
    </properties>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>oss.sonatype.org</id>
            <name>OSS Sonatype</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-commons</artifactId>
            <version>0.3.10</version>
        </dependency>
        <dependency>
            <groupId>com.rethinkdb</groupId>
            <artifactId>rethinkdb-driver</artifactId>
            <version>2.3.3</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.0.1-jre</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.23</version>
        </dependency>

        <!-- Do all logging thru Log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.8.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.13.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Make version number available for application -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-tests</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                                    <images>
                                        <image>
                                            <name>rethinkdb:${rethinkdb.version}</name>
                                            <alias>db</alias>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>db-test-net</name>
                                                    <alias>db</alias>
                                                </network>
                                                <ports>
                                                    <port>+db.host:db.port:28015</port>
                                                </ports>
                                                <log>
                                                    <enabled>true</enabled>
                                                </log>
                                                <wait>
                                                    <tcp>
                                                        <mode>mapped</mode>
                                                        <ports>
                                                            <port>28015</port>
                                                        </ports>
                                                    </tcp>
                                                    <time>20000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>remove-tests</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <removeVolumes>true</removeVolumes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <db.host>${db.host}</db.host>
                                <db.port>${db.port}</db.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Builds db initializer which is meant to be run before apllication is started -->
        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <!-- Create assembly with startup scripts and dependencies -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>appassembler-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>assemble</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <licenseHeaderFile>${basedir}/src/main/etc/license-header.txt</licenseHeaderFile>
                            <programs>
                                <program>
                                    <mainClass>no.nb.nna.veidemann.db.initializer.Main</mainClass>
                                    <id>${initializer.image.name}</id>
                                </program>
                            </programs>
                            <binFolder>bin</binFolder>
                            <repositoryName>lib</repositoryName>
                            <repositoryLayout>flat</repositoryLayout>
                            <configurationDirectory>config</configurationDirectory>
                            <endorsedDir>plugins</endorsedDir>
                            <preAssembleDirectory>src/main/distfiles</preAssembleDirectory>
                            <extraJvmArguments>-Dconfig.file=@BASEDIR@/config/application.conf
                                -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
                            </extraJvmArguments>
                        </configuration>
                    </plugin>

                    <!-- Build Docker image -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <images>
                                <image>
                                    <name>norsknettarkiv/${initializer.image.name}</name>
                                    <alias>db-initializer</alias>
                                    <build>
                                        <from>${docker.java.image}</from>
                                        <maintainer>National Library of Norway</maintainer>
                                        <tags>
                                            <tag>${docker.tag}</tag>
                                        </tags>
                                        <ports>
                                            <port>50051</port>
                                        </ports>
                                        <cmd>
                                            <exec>
                                                <arg>/veidemann/bin/${initializer.image.name}</arg>
                                            </exec>
                                        </cmd>
                                        <assembly>
                                            <targetDir>/veidemann</targetDir>

                                            <inline>
                                                <includeBaseDirectory>true</includeBaseDirectory>
                                                <fileSets>
                                                    <fileSet>
                                                        <directory>target/appassembler/bin</directory>
                                                        <outputDirectory>bin</outputDirectory>
                                                        <includes>
                                                            <include>${initializer.image.name}</include>
                                                        </includes>
                                                        <fileMode>0755</fileMode>
                                                    </fileSet>
                                                    <fileSet>
                                                        <directory>target/appassembler/bin</directory>
                                                        <outputDirectory>bin</outputDirectory>
                                                        <excludes>
                                                            <exclude>${initializer.image.name}</exclude>
                                                        </excludes>
                                                        <fileMode>0644</fileMode>
                                                    </fileSet>
                                                    <fileSet>
                                                        <directory>target/appassembler</directory>
                                                        <outputDirectory>/</outputDirectory>
                                                        <excludes>
                                                            <exclude>bin</exclude>
                                                        </excludes>
                                                    </fileSet>
                                                </fileSets>
                                                <files>
                                                    <file>
                                                        <source>LICENSE</source>
                                                        <outputDirectory></outputDirectory>
                                                        <fileMode>0644</fileMode>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>