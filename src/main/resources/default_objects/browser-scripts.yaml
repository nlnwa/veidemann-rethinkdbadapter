apiVersion: v1
id: 52aeccf3-77d5-4c18-b55f-6561d582a7fb
browserScript:
  browserScriptType: EXTRACT_OUTLINKS
  script: |
    (function extractOutlinks(frame) {
      const framesDone = new Set();

      function compileOutlinks(frame) {
        framesDone.add(frame);
        if (frame && frame.document) {
          let outlinks = Array.from(frame.document.links);
          for (var i = 0; i < frame.frames.length; i++) {
            if (frame.frames[i] && !framesDone.has(frame.frames[i])) {
              try {
                outlinks = outlinks.concat(compileOutlinks(frame.frames[i]));
              } catch {}
            }
          }
          return outlinks;
        }
        return [];
      }

      return compileOutlinks(frame).map(_ => _.href);
    })(window);
  urlRegexp: []
kind: browserScript
meta:
  annotation: []
  description: Script which extracts outlinks from <a href> tags
  label:
    - key: scope
      value: default
    - key: type
      value: extract_outlinks
  name: extract-outlinks.js

---

apiVersion: v1
id: 75dfe01a-e9cc-4fd2-8aa5-c04878d9f1a1
browserScript:
  browserScriptType: ON_LOAD
  script: |
    function scroll ({ count = 100 } = {}) {
      // first iteration of this scripts use a string representation of argument
      const c = parseInt(count, 10)

      // height of visible area of window
      const windowHeight = window.innerHeight

      // height of scrollable area
      const scrollHeight = document.documentElement.scrollHeight

      if (c > 0 && scrollHeight > window.pageYOffset + windowHeight) {
        // scroll down height of window
        window.scrollBy(0, windowHeight)

        if (c - 1 > 0 && scrollHeight > window.pageYOffset + windowHeight) {
          return {
            waitForData: true,
            next: 'self',
            data: {
              count: c - 1,
            }
          }
        }
      }

      return {
        waitForData: false,
        next: 'scrollTo.js',
        data: { x: 0, y: 0 }
      }
    }
  urlRegexp: []
kind: browserScript
meta:
  description: Scroll down maxPages
  label:
    - key: scope
      value: default
  name: scroll.js

---

apiVersion: v1
id: 0ef72ea7-f145-4908-adaa-ebf50890b09c
browserScript:
  browserScriptType: UNDEFINED
  script: |
    function scrollTo({x = 0, y = 0} = {}) {
      window.scrollTo(x, y);
      return {
        waitForData: true,
        next: '',
        data: null,
      };
    }
  urlRegexp: []
kind: browserScript
meta:
  annotation: []
  description: Scroll to (x, y)
  label:
    - key: scope
      value: default
  name: scrollTo.js
